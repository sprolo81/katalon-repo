{"version":3,"file":"static/js/787.0204e7e2.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js","client/variables/OpenAIAction.jsx","client/services/KatalonOpenAIService.jsx","client/pages/api-test-generation/components/APITestGenerationLayout.jsx","client/pages/api-test-generation/APITestGenerationPage.jsx","../node_modules/@material-ui/core/esm/utils/debounce.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport deprecatedPropType from '../utils/deprecatedPropType';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMinProp = props.rowsMin,\n      maxRowsProp = props.maxRows,\n      _props$minRows = props.minRows,\n      minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n\n  var maxRows = maxRowsProp || rowsMax;\n  var minRows = rows || rowsMinProp || minRowsProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead.'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `maxRows` instead.'),\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead.'),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","const OpenAIAction = {\r\n  UploadFile: 'UPLOAD_FILE',\r\n};\r\n\r\nexport default OpenAIAction","import axios from 'axios';\r\nimport OpenAIAction from '../variables/OpenAIAction';\r\nimport KatalonEndpoints from '../variables/KatalonEndpoints';\r\n\r\n\r\nexport default class KSOpenAIService {\r\n  static async uploadFile() {\r\n    return await axios.post(`${KatalonEndpoints.KatalonOpenAI}?action=${OpenAIAction.UploadFile}`)\r\n  }\r\n}\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Input,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport KatalonOpenAIService from \"../../../services/KatalonOpenAIService\";\r\nimport OpenAIAction from \"../../../variables/OpenAIAction\";\r\nconst styles = makeStyles(() => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    margin: 0,\r\n    padding: 40,\r\n    background: \"white\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  frame: {\r\n    width: \"20%\",\r\n  },\r\n}));\r\n\r\nexport const APITestGenerationLayout = () => {\r\n  const classes = styles();\r\n\r\n  const handleUploadFile = () => {\r\n    KatalonOpenAIService.uploadFile();\r\n  };\r\n\r\n  return (\r\n    <Scrollbars\r\n      autoHide\r\n      hideTracksWhenNotNeeded\r\n      style={{ width: \"100%\" }}\r\n      autoHeightMin=\"100%\"\r\n      autoHeightMax=\"100%\"\r\n    >\r\n      <Grid container className={classes.root}>\r\n        <Grid className={classes.frame}>\r\n          <Grid item xs={12}>\r\n            {/* <input\r\n              type=\"file\"\r\n              onChange={handleUploadFile}\r\n              name=\"[licenseFile]\"\r\n            /> */}\r\n            <Button variant=\"contained\" component=\"label\" onClick={handleUploadFile}>\r\n              Upload File\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            Content\r\n          </Grid>\r\n          <Grid xs={12}>\r\n            <TextareaAutosize />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Scrollbars>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { APITestGenerationLayout } from \"./components/APITestGenerationLayout\";\r\n\r\nexport default function APITestGenerationPage() {\r\n  return <APITestGenerationLayout />;\r\n}\r\n","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}"],"names":["getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","React","styles","visibility","position","overflow","height","top","left","transform","props","ref","onChange","rows","rowsMax","rowsMinProp","rowsMin","maxRowsProp","maxRows","_props$minRows","minRows","minRowsProp","style","value","other","_objectWithoutProperties","isControlled","current","inputRef","handleRef","useForkRef","shadowRef","renders","_React$useState","state","setState","syncHeight","input","getComputedStyle","inputShallow","width","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","handleResize","debounce","addEventListener","clear","removeEventListener","_extends","event","className","readOnly","tabIndex","UploadFile","KSOpenAIService","axios","KatalonEndpoints","OpenAIAction","makeStyles","root","margin","background","justifyContent","alignContent","alignItems","frame","APITestGenerationLayout","classes","autoHide","hideTracksWhenNotNeeded","autoHeightMin","autoHeightMax","Grid","container","item","xs","Button","variant","component","onClick","KatalonOpenAIService","APITestGenerationPage","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","that","this","later","apply","clearTimeout","setTimeout"],"sourceRoot":""}